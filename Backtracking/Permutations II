class Solution {
public:
   
void helper(vector<vector<int>> &output , vector<int> number , int k)
{
	if(k==number.size())
	{
		output.push_back(number);
		return;
	}
	for (int i = k; i < number.size(); i++)
	{
	        if(number[i] != number[k])
            {
                swap(number[i] , number[k]);
                helper(output , number , k+1);
            }
            else if(i == k)
            {
                helper(output , number , k+1);
            }
	}
	
}

vector<vector<int>> permuteUnique(vector<int>& nums) {
        vector<vector<int>> output;
        sort(nums.begin() , nums.end());
        helper(output , nums , 0);
        return output;
    }
};
