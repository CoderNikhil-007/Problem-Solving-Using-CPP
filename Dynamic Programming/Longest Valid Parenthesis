class Solution {
public:
    int longestValidParentheses(string s) {
        int n = s.length();
        vector<int> dp(n,0);
        int ans = 0;
        for(int i = 0; i < n; i++){
            if(s[i] == '(') {
                dp[i] = 0;
                continue;
            }
            if (i-1 < 0) 
                continue; 
            
            if (s[i-1] == '(' ){
                dp[i] = 2;
                if(i-2>=0) dp[i]+= dp[i-2];
            }
            else{
                if(i-dp[i-1]-1 >= 0){
                    
                    if(s[i-dp[i-1]-1] =='('){
                        dp[i] = 2 + dp[i-1];
                        
                        if(i-dp[i-1]-2 >= 0 )
                            dp[i]+=dp[i-dp[i-1]-2];
                    }
                }
                 
            }
            ans = max(ans, dp[i]);
               
            
        }
        return ans;
    }
};
