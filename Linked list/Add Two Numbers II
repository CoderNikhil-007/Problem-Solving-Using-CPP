class Solution {
public:
    ListNode* reverse(ListNode* head){
        ListNode* curr=head;
        ListNode* prev=NULL;
        ListNode* nxt=NULL;
        while(curr!=NULL){
            nxt=curr->next;
            curr->next=prev;
            prev=curr;
            curr=nxt;
        }
        return prev;
    }
    ListNode* addTwoNumbers1(ListNode* l1, ListNode* l2) {
        ListNode* ans = new ListNode(0);
        ListNode* temp = ans;
        int carry = 0;
        while(l1 || l2 || carry){
            int val1 = (l1 != NULL)? l1 -> val : 0;
            int val2 = (l2 != NULL)? l2 -> val : 0;
            
            int value = val1 + val2 + carry;
            carry = value/10;
            value = value%10;
            temp->next = new ListNode(value);
            if(l1)
                l1 = l1->next;
            if(l2)
                l2 = l2->next;
            temp = temp->next;
        }
        return ans->next;
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        l1 = reverse(l1);
        l2 = reverse(l2);
        return reverse(addTwoNumbers1(l1,l2));
    }
};
